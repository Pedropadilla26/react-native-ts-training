{
  "ast": null,
  "code": "var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HomeScreen = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _NewAppScreen = require(\"react-native/Libraries/NewAppScreen\");\n\nvar _Section = require(\"./Section\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Pedro\\\\Desarrollo\\\\reactNativeTrainingTs\\\\src\\\\components\\\\Home.tsx\";\n\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var isDarkMode = (0, _reactNative.useColorScheme)() === 'dark';\n  var backgroundStyle = {\n    backgroundColor: isDarkMode ? _NewAppScreen.Colors.darker : _NewAppScreen.Colors.lighter\n  };\n  return _react.default.createElement(_reactNative.SafeAreaView, {\n    style: backgroundStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.ScrollView, {\n    contentInsetAdjustmentBehavior: \"automatic\",\n    style: backgroundStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: {\n      backgroundColor: isDarkMode ? _NewAppScreen.Colors.black : _NewAppScreen.Colors.white\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_Section.Section, {\n    title: \" making a mobile app\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_reactNative.Button, {\n    color: \"#3B5360\",\n    title: \"Learn about react-native\",\n    onPress: function onPress() {\n      return navigation.navigate('Info', {\n        name: ' react-native'\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_reactNative.Button, {\n    color: \"#11324D\",\n    title: \"Learn about typescript\",\n    onPress: function onPress() {\n      return navigation.navigate('Info', {\n        name: ' typescript'\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_reactNative.Button, {\n    color: \"#5E454B\",\n    title: \"Learn about expo\",\n    onPress: function onPress() {\n      return navigation.navigate('Info', {\n        name: ' expo'\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexports.HomeScreen = HomeScreen;\n\nvar styles = _reactNative.StyleSheet.create({\n  buttonContainer: {\n    margin: 20,\n    paddingHorizontal: 24,\n    borderRadius: 30\n  }\n});",
  "map": {
    "version": 3,
    "sources": ["C:/Users/Pedro/Desarrollo/reactNativeTrainingTs/src/components/Home.tsx"],
    "names": [
      "HomeScreen",
      "navigation",
      "isDarkMode",
      "backgroundStyle",
      "backgroundColor",
      "Colors",
      "darker",
      "lighter",
      "black",
      "white",
      "styles",
      "buttonContainer",
      "navigate",
      "name",
      "StyleSheet",
      "create",
      "margin",
      "paddingHorizontal",
      "borderRadius"
    ],
    "mappings": ";;;;;;;AAAA;;AACA;;AASA;;AAEA;;;;;AAQO,IAAMA,UAAU,GAAG,SAAbA,UAAa,OAA6B;AAAA,MAA3BC,UAA2B,QAA3BA,UAA2B;AACrD,MAAMC,UAAU,GAAG,uCAAqB,MAAxC;AACA,MAAMC,eAAe,GAAG;AACtBC,IAAAA,eAAe,EAAEF,UAAU,GAAGG,qBAAOC,MAAV,GAAmBD,qBAAOE;AAD/B,GAAxB;AAGA,SACE,6BAAC,yBAAD;AAAc,IAAA,KAAK,EAAEJ,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,uBAAD;AACE,IAAA,8BAA8B,EAAC,WADjC;AAEE,IAAA,KAAK,EAAEA,eAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,6BAAC,iBAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,eAAe,EAAEF,UAAU,GAAGG,qBAAOG,KAAV,GAAkBH,qBAAOI;AAD/C,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,6BAAC,gBAAD;AAAS,IAAA,KAAK,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,mBAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,KAAK,EAAC,0BAFR;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMV,UAAU,CAACW,QAAX,CAAoB,MAApB,EAA4B;AAACC,QAAAA,IAAI,EAAE;AAAP,OAA5B,CAAN;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,EAYE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,mBAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,KAAK,EAAC,wBAFR;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMV,UAAU,CAACW,QAAX,CAAoB,MAApB,EAA4B;AAACC,QAAAA,IAAI,EAAE;AAAP,OAA5B,CAAN;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAZF,EAmBE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,mBAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,KAAK,EAAC,kBAFR;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMV,UAAU,CAACW,QAAX,CAAoB,MAApB,EAA4B;AAACC,QAAAA,IAAI,EAAE;AAAP,OAA5B,CAAN;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAnBF,CAHF,CADF,CADF;AAmCD,CAxCM;;;;AA0CP,IAAMH,MAAM,GAAGI,wBAAWC,MAAX,CAAkB;AAC/BJ,EAAAA,eAAe,EAAE;AACfK,IAAAA,MAAM,EAAE,EADO;AAEfC,IAAAA,iBAAiB,EAAE,EAFJ;AAGfC,IAAAA,YAAY,EAAE;AAHC;AADc,CAAlB,CAAf",
    "sourcesContent": [
      "import React from 'react';\nimport {\n  SafeAreaView,\n  ScrollView,\n  useColorScheme,\n  View,\n  Button,\n  StyleSheet,\n} from 'react-native';\n\nimport {Colors} from 'react-native/Libraries/NewAppScreen';\nimport {NativeStackScreenProps} from '@react-navigation/native-stack';\nimport {Section} from './Section';\n\ntype RootStackParamList = {\n  Home: undefined;\n};\n\ntype homeProps = NativeStackScreenProps<RootStackParamList, 'Home'>;\n\nexport const HomeScreen = ({navigation}: homeProps) => {\n  const isDarkMode = useColorScheme() === 'dark';\n  const backgroundStyle = {\n    backgroundColor: isDarkMode ? Colors.darker : Colors.lighter,\n  };\n  return (\n    <SafeAreaView style={backgroundStyle}>\n      <ScrollView\n        contentInsetAdjustmentBehavior=\"automatic\"\n        style={backgroundStyle}>\n        <View\n          style={{\n            backgroundColor: isDarkMode ? Colors.black : Colors.white,\n          }}>\n          <Section title=\" making a mobile app\"/>\n          <View style={styles.buttonContainer}>\n            <Button\n              color=\"#3B5360\"\n              title=\"Learn about react-native\"\n              onPress={() => navigation.navigate('Info', {name: ' react-native'})}\n            />\n          </View>\n          <View style={styles.buttonContainer}>\n            <Button\n              color=\"#11324D\"\n              title=\"Learn about typescript\"\n              onPress={() => navigation.navigate('Info', {name: ' typescript'})}\n            />\n          </View>\n          <View style={styles.buttonContainer}>\n            <Button\n              color=\"#5E454B\"\n              title=\"Learn about expo\"\n              onPress={() => navigation.navigate('Info', {name: ' expo'})}\n            />\n          </View>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    margin: 20,\n    paddingHorizontal: 24,\n    borderRadius: 30,\n  },\n});"
    ]
  },
  "metadata": {},
  "sourceType": "script"
}
